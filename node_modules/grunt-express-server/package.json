{
  "name": "grunt-express-server",
  "description": "Grunt task for running an Express Server that works great with LiveReload + Watch/Regarde",
  "version": "0.3.1",
  "homepage": "https://github.com/ericclemmons/grunt-express-server",
  "author": {
    "name": "Eric Clemmons",
    "email": "eric@smarterspam.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ericclemmons/grunt-express-server.git"
  },
  "bugs": {
    "url": "https://github.com/ericclemmons/grunt-express-server/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/ericclemmons/grunt-express-server/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "./node_modules/.bin/grunt"
  },
  "devDependencies": {
    "express": "~3.2.4",
    "grunt": "~0.4.0",
    "grunt-cli": "~0.1.6",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "express",
    "server"
  ],
  "readme": "# grunt-express-server [![Build Status](https://travis-ci.org/ericclemmons/grunt-express-server.png?branch=master)](https://travis-ci.org/ericclemmons/grunt-express-server)\n\n> Simple grunt task for running an Express server that works great with LiveReload + Watch/Regarde\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-express-server --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-express-server');\n```\n\n## The `express` task\n\n### Setup\n\nIn your project's Gruntfile, you can create one or multiple servers:\n\n```js\ngrunt.initConfig({\n  express: {\n    options: {\n      // Override defaults here\n    },\n    dev: {\n      options: {\n        script: 'path/to/dev/server.js'\n      }\n    },\n    prod: {\n      options: {\n        script: 'path/to/prod/server.js'\n      }\n    }\n    test: {\n      options: {\n        script: 'path/to/test/server.js'\n      }\n    }\n  }\n});\n```\n\nYou can override the default `options` either in the root of the `express` config\nor within each individual server task.\n\n### Default `options`\n\n```js\n  express: {\n    options: {\n      // Will turn into: `node path/to/server.js ARG1 ARG2 ... ARGN`\n      args: [ ],\n\n      // Setting to `false` will effectively just run `node path/to/server.js`\n      background: true,\n\n      // Called if spawning the server fails\n      error: function(err, result, code) {},\n\n      // Called when the spawned server throws errors\n      fallback: function() {},\n\n      // Override node env's PORT\n      port: 3000\n    }\n  }\n```\n\n### Usage\n\n#### Starting the server\n\nIf you have a server defined named `dev`, you can start the server by running `expess:dev`.\n\n\n#### Stopping the server\n\nSimilarly, if you start the `dev` server with `express:dev`, you can stop the server\nwith `express:dev:stop`.\n\n#### With [grunt-contrib-livereload](https://github.com/gruntjs/grunt-contrib-livereload)\n\n```js\ngrunt.initConfig({\n  watch: {\n    express: {\n      files:  [ 'path/to/files/to/watch/**.js' ],\n      tasks:  [ 'express:dev', 'livereload' ]\n    }\n  }\n});\n\ngrunt.registerTask('server', [ 'express:dev', 'livereload', 'watch' ])\n```\n\nThis will let you override `grunt server` with a LiveReload-able Express Server.\nFinally, you can make changes to your API and watch the JSON change in your browser!\n\n#### With [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch)\n\n```js\ngrunt.initConfig({\n  watch: {\n    express: {\n      files:  [ '**/*.js' ],\n      tasks:  [ 'express:dev' ],\n      options: {\n        nospawn: true //Without this option specified express won't be reloaded\n      }\n    }\n  }\n});\n\ngrunt.registerTask('server', [ 'express:dev', 'watch' ])\n```\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n### v0.3.1\n\n- Try to force notification that `express` task has finished as much as possible\n\n### v0.3.0\n\n- `express` is now a multitask with customizable options, better error handling and `:stop` task\n\n### v0.2.0\n\n- Change `express-server` task to `express`\n- Config is set via `express: '...'` instead of `server: { script: '...' } `\n\n### v0.1.0\n\n- Initial import from [Genesis Skeleton](https://github.com/ericclemmons/genesis-skeleton) & release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-express-server@0.3.1",
  "dist": {
    "shasum": "7f180b904dbde64f7e13f0f092edfe9f2a071bec"
  },
  "_from": "grunt-express-server@~0.3.1",
  "_resolved": "https://registry.npmjs.org/grunt-express-server/-/grunt-express-server-0.3.1.tgz"
}
